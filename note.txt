Decorators
----------
- @ is used to denote Decorators
- used to define metadata
- a data inside another data
- structure is always same, the content changes 
- functionality is same



- in angular class based components
- we have to export a class before we import that class in another file

- we call html, css in typescript file


- ngOnInit() - abstract method, we don't have to call it separately


life cycle of angular(working cycle)
--------------------
1 - constructor - no need to call
2 - ngOnInit() - no need to call
 - other methods


Angular - data binding
----------------------
how a ts file share data with html
- files are already connected

ts to html
---------
ts file - component
html - view

1 - one way data binding
------------------------


1.1 - component to view data sharing:
------------------------------------

   1.1.1 - String Interpollation {{}}

   if the data is string data we can use this, even if the data is another type we can conver this to string and use this  

   we can't use this inside constructor , this method should work before the content

   data: string or data: any

   constructor(){
      this.data = "content"
   }

   1.1.2 - property binding []

   [propertyName] = "bindingData

1.2 view to component(html to ts)
--------------------------------

   1.2.1 - event binding  (eventName) = "methodName()" eg:click

   it is "click" in ts as "onclick in js
   the method we call in html must be defined inside class component of typeScript

   1.2.2 - $event binding  (eventName) = "methodName($event)" eg: change - for accessing changed value.
   we get data when this event works